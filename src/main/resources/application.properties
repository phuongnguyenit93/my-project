# Cấu hình cổng tomcat và context path
# Context path nghĩa là thay vì localhost:8080/ thì sẽ thay URL mặc định localhost:8080/myproject
# server.port = 8080
# server.servlet.context-path = /myproject

driverDataSource = com.mysql.cj.jdbc.Driver
urlDataSource = jdbc:mysql://127.0.0.1:3306/structure?useSSL=false
usernameDataSource = root
passwordDataSource = root

server.servlet.session.timeout=1m

# Setup for i18n
spring.messages.basename=message/messages
spring.messages.defaultEncoding = UTF-8

# Cấu hình file folder JSP
# spring.mvc.view.prefix=/WEB-INF/views/
# spring.mvc.view.suffix=.jsp

# Cấu hình live reload - Sử dụng cho thymeleaf
spring.thymeleaf.cache=false

#Cấu hình thay đổi vị trí file resouce của thymeleaf
# spring.thymeleaf.cache = false
# spring.thymeleaf.mode = HTML 
# spring.thymeleaf.encoding = UTF-8
# spring.thymeleaf.prefix = file:src/main/resources/templates/ - Vị trí default của view của thymeleaf
# spring.web.resources.static-locations: file:src/main/resources/static/  - Vị trí default của resource của thymeleaf
# spring.web.resources.static-locations= file:src/main/webapp/resources - Vị trí muốn thay đổi theo JSP

# Spring boot Admin Client (Sử dụng song song với Spring boot Server)
# Docs : http://docs.spring-boot-admin.com/current/server.html
spring.boot.admin.client.url=http://localhost:8081
spring.application.name =my-project

spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

# Spring boot actuator - Sử dụng để thống kê đo lường toàn bộ dự án spring
# Docs : https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html
management.endpoints.web.exposure.include=*
management.health.mail.enabled =false
management.endpoint.health.show-details=always


# Setup datasource config
# spring.datasource.url=jdbc:mysql://127.0.0.1:3306/structure?useSSL=false
# spring.datasource.username=root
# spring.datasource.password=root
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
# spring.jpa.hibernate.ddl-auto=update

#Spring Bucket 4J
# https://github.com/MarcGiffing/bucket4j-spring-boot-starter

# spring.cache.type=jcache
# spring.cache.jcache.config=classpath:ehcache.xml
spring.cache.cache-names=buckets

bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].filter-method=servlet
bucket4j.filters[0].http-content-type=application/json
bucket4j.filters[0].http-status-code=TOO_MANY_REQUESTS
bucket4j.filters[0].http-response-body={ "message": "Too many requests" }
bucket4j.filters[0].url=.*
bucket4j.filters[0].strategy=first
bucket4j.filters[0].rate-limits[0].cache-key=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=3
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=2
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval=0
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=minutes